group = "net.antcenter"
version = "0.1"

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

apply from: 'buildscripts/mixedlang.gradle'
apply from: 'buildscripts/fatjar.gradle'

repositories {
    mavenCentral()
    repositories { maven { url "http://dl.bintray.com/kyonifer/maven" } }

}

mainClassName = "MainKt"

dependencies {
    // Depend on the std libs of all our languages
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.beust:jcommander:1.48"
    compile 'golem:golem-logging:0.5'
    compile 'io.vertx:vertx-core:3.2.1'
    compile 'io.vertx:vertx-web:3.2.1'

    compile files(findJar("lcm.jar", ["jars/", "/usr/share/java/", "/opt/share/java/"]))
    compile files(findJar("aspn-messages-lcm.jar", ["jars/"]))

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"

}


// Add kotlin support to gradle
buildscript {
    ext.kotlin_version = '1.0.1'
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.7"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// Configure fatJar exclusions
project.ext.fatExcludes = ["native", "jblas"]

String findJar(jarName, paths) {
    def path = paths.find {
        if (file(it+jarName).exists()) {
            return true
        }
        return false
    }
    if (path == null)
        throw new Exception("Can't find $jarName: please supply to build.gradle or put in jars/*")
    else
        return path+jarName
}
